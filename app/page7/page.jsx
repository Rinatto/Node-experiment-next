// app/page1/page.jsx
import '../styles/page.css';

export default function Page7() {
    return (
        <div>
            <h1>ReScript</h1>
            <p>ReScript (ранее известный как ReasonML) – это язык программирования, предназначенный для веб-разработки, который компилируется в высоко-оптимизированный JavaScript. Данный язык программирования сочетает функциональные и императивные парадигмы программирования с сильной статической типизацией.</p>
            <p>Рассмотрим несколько примеров реализации статической типизации в ReScript.</p>
            <h3>Определение типов и использование функций</h3>
            <pre>
                <code>
                    {`// Определение типа для описания пользователя
type person = {
  name: string,
  age: int
}

// Функция для создания приветствия для пользователя
let greet = (p: person) => "Hello, " ++ p.name ++ ", you are " ++ string_of_int(p.age) ++ " years old!"

// Создание пользователя
let user = {name: "Alice", age: 30}

// Использование функции greet
Js.log(greet(user))`}
                </code>
            </pre>
            <p>В этом примере:</p>
<p> - type person определяет новый тип person с двумя полями: name (строка) и age (целое число).</p>
<p> - greet — функция, которая принимает аргумент типа person и возвращает строку, используя значения полей объекта.</p>
<p> - string_of_int — функция преобразования целого числа в строку, используемая для отображения возраста.</p>
<p> - Js.log используется для вывода строки в консоль.</p>
            <h3>Работа с вариантными типами (аналог ADT)</h3>
            <pre>
                <code>
                    {`// Определение алгебраического типа данных для форм
type shape =
  | Circle(float)
  | Rectangle(float, float)

// Функция для вычисления площади фигуры
let area = (s: shape) => {
  switch s {
  | Circle(r) => 3.14 *. r *. r
  | Rectangle(w, h) => w *. h
  }
}

// Создание круга и прямоугольника
let circle = Circle(2.0)
let rectangle = Rectangle(3.0, 4.0)

// Вычисление площадей
Js.log(area(circle))
Js.log(area(rectangle))
`}
                </code>
            </pre>
            <p>В этом примере:</p>
<p> - shape — вариантный тип, который может быть либо Circle с одним радиусом, либо Rectangle с шириной и высотой.</p>
<p> - area — функция, которая принимает shape и возвращает площадь, используя паттерн-матчинг для определения типа фигуры.</p>
        </div>
    );
}